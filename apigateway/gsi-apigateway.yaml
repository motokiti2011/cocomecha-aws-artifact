AWSTemplateFormatVersion: 2010-09-09
Description: IaC for API Gateway

Parameters:

  # BrowsingHistoryGSIのARN
  BrowsingHistoryGSILambdaArn:
    Type: String
    Description: BrowsingHistoryGSI of Lambda

  # CompletionSlipGSIのARN
  CompletionSlipGSILambdaArn:
    Type: String
    Description: CompletionSlipGSI of Lambda

  # EvaluationInfoGSIのARN
  EvaluationInfoGSILambdaArn:
    Type: String
    Description: EvaluationInfoGSI of Lambda

  # HistoryInfoMechaGSIのARN
  HistoryInfoMechaGSILambdaArn:
    Type: String
    Description: HistoryInfoMechaGSI of Lambda

  # HistoryInfoOfficeGSIのARN
  HistoryInfoOfficeGSILambdaArn:
    Type: String
    Description: HistoryInfoOfficeGSI of Lambda

  # SlipDetailInfoGSIのARN
  SlipDetailInfoGSILambdaArn:
    Type: String
    Description: SlipDetailInfoGSI of Lambda

  # SlipMessageInfoGSIのARN
  SlipMessageInfoGSILambdaArn:
    Type: String
    Description: SlipMessageInfoGSI of Lambda

  # SlipQuestionGSIのARN
  SlipQuestionGSILambdaArn:
    Type: String
    Description: SlipQuestionGSI of Lambda

  # TransactionSlipGSIのARN
  TransactionSlipGSILambdaArn:
    Type: String
    Description: TransactionSlipGSI of Lambda

  # UserFavoriteGSIのARN
  UserFavoriteGSILambdaArn:
    Type: String
    Description: UserFavoriteGSI of Lambda

  # UserMyListGSIのARN
  UserMyListGSILambdaArn:
    Type: String
    Description: UserMyListGSI of Lambda

  # UserVehicleInfoGSIのARN
  UserVehicleInfoGSILambdaArn:
    Type: String
    Description: UserVehicleInfoGSI of Lambda


  # CognitoUserPoolのARN
  UserPoolArn:
    Type: String
    Description: UserPool of Cognito

Resources:
  # RESTAPI
  ApiGwRestAPI:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Description: This is the Description of ApiGwRestAPI
      Name: 'cocomecha-GSI-APIGW'
      EndpointConfiguration:
        Types:
          - REGIONAL
  ApiGwDeployment:
    Type: 'AWS::ApiGateway::Deployment'
    Properties:
      Description: This is the Description of ApiGwDeployment
      RestApiId: !Ref ApiGwRestAPI
    DependsOn:
      - V1Resource
      - IndexSerchResource
      - BrowsinghistoryGSIResource
      - CompletionSlipGSIResource
      - EvaluationInfoGSIResource
      - HistoryInfoMechaGSIResource
      - HistoryInfoOfficeGSIResource
      - SlipDetailInfoGSIResource
      - SlipMessageInfoGSIResource
      - SlipQuestionGSIResource
      - TransactionSlipGSIResource
      - UserFavoriteGSIResource
      - UserMyListGSIResource
      - UserVehicleInfoGSIResource
      - BrowsinghistoryGSIMethod
      - CompletionSlipGSIMethod
      - EvaluationInfoGSIMethod
      - HistoryInfoMechaGSIMethod
      - HistoryInfoOfficeGSIMethod
      - SlipDetailInfoGSIMethod
      - SlipMessageInfoGSIMethod
      - SlipQuestionGSIMethod
      - TransactionSlipGSIMethod
      - UserFavoriteGSIMethod
      - UserMyListGSIMethod
      - UserVehicleInfoGSIMethod
      - 

  # ステージ
  ApiGwStage:
    Type: 'AWS::ApiGateway::Stage'
    Properties:
      RestApiId: !Ref ApiGwRestAPI
      DeploymentId: !Ref ApiGwDeployment
      StageName: dev
  # オーソライザー
  Authorizer: 
    Type: AWS::ApiGateway::Authorizer
    Properties: 
      ProviderARNs: 
        - !Ref UserPoolArn
      AuthorizerResultTtlInSeconds: "300"
      Type: "COGNITO_USER_POOLS"
      IdentitySource: "method.request.header.Authorization"
      Name: "Authorization"
      RestApiId: !Ref ApiGwRestAPI
  # v1リソース
  V1Resource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !GetAtt 
        - ApiGwRestAPI
        - RootResourceId
      PathPart: v1
      RestApiId: !Ref ApiGwRestAPI



  # IndexSerchリソース
  IndexIndexSerchResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref v1Resource
      PathPart: indexserch
      RestApiId: !Ref ApiGwRestAPI



  # BrowsinghistoryGSIリソース
  BrowsinghistoryGSIResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref IndexSerchResource
      PathPart: browsinghistory
      RestApiId: !Ref ApiGwRestAPI
  # BrowsinghistorGSIyメソッド
  BrowsinghistoryGSIMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      HttpMethod: POST
      ResourceId: !Ref BrowsinghistoryGSIResource
      RestApiId: !Ref ApiGwRestAPI
      AuthorizerId: !Ref Authorizer
      AuthorizationType: COGNITO_USER_POOLS
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Uri:  !Join 
         - ''
         - - 'arn:aws:apigateway:'
           - !Ref AWS::Region
           - ':lambda:path/2015-03-31/functions/'
           - !Ref BrowsingHistoryGSILambdaArn
           - '/invocations'
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: $input.json('$')
        IntegrationResponses:
          - StatusCode: '200'
            ResponseTemplates:
              application/json;charset=UTF-8: $input.json('$')
      MethodResponses:
        - StatusCode: '200'
          ResponseModels:
            application/json;charset=UTF-8: Empty
    DependsOn: LambdaPermission1


  # CompletionSlipGSIリソース
  CompletionSlipGSIResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref IndexSerchResource
      PathPart: completionslip
      RestApiId: !Ref ApiGwRestAPI
  # CompletionSlipGSIメソッド
  CompletionSlipGSIMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      HttpMethod: POST
      ResourceId: !Ref CompletionSlipGSIResource
      RestApiId: !Ref ApiGwRestAPI
      AuthorizerId: !Ref Authorizer
      AuthorizationType: COGNITO_USER_POOLS
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Uri:  !Join 
         - ''
         - - 'arn:aws:apigateway:'
           - !Ref AWS::Region
           - ':lambda:path/2015-03-31/functions/'
           - !Ref CompletionSlipGSILambdaArn
           - '/invocations'
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: $input.json('$')
        IntegrationResponses:
          - StatusCode: '200'
            ResponseTemplates:
              application/json;charset=UTF-8: $input.json('$')
      MethodResponses:
        - StatusCode: '200'
          ResponseModels:
            application/json;charset=UTF-8: Empty
    DependsOn: LambdaPermission11


  # EvaluationinfoGSIリソース
  EvaluationInfoGSIResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref IndexSerchResource
      PathPart: evaluationinfo
      RestApiId: !Ref ApiGwRestAPI
  # EvaluationinfoGSIメソッド
  EvaluationInfoGSIMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      HttpMethod: POST
      ResourceId: !Ref EvaluationInfoGSIResource
      RestApiId: !Ref ApiGwRestAPI
      AuthorizerId: !Ref Authorizer
      AuthorizationType: COGNITO_USER_POOLS
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Uri:  !Join 
         - ''
         - - 'arn:aws:apigateway:'
           - !Ref AWS::Region
           - ':lambda:path/2015-03-31/functions/'
           - !Ref EvaluationInfoGSILambdaArn
           - '/invocations'
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: $input.json('$')
        IntegrationResponses:
          - StatusCode: '200'
            ResponseTemplates:
              application/json;charset=UTF-8: $input.json('$')
      MethodResponses:
        - StatusCode: '200'
          ResponseModels:
            application/json;charset=UTF-8: Empty
    DependsOn: LambdaPermission2


  # HistoryInfoMechaGSIリソース
  HistoryInfoMechaGSIResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref IndexSerchResource
      PathPart: historyinfomecha
      RestApiId: !Ref ApiGwRestAPI
  # HistoryInfoMechaGSIメソッド
  HistoryInfoMechaGSIMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      HttpMethod: POST
      ResourceId: !Ref HistoryInfoMechaGSIResource
      RestApiId: !Ref ApiGwRestAPI
      AuthorizerId: !Ref Authorizer
      AuthorizationType: COGNITO_USER_POOLS
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Uri:  !Join 
         - ''
         - - 'arn:aws:apigateway:'
           - !Ref AWS::Region
           - ':lambda:path/2015-03-31/functions/'
           - !Ref HistoryInfoMechaGSILambdaArn
           - '/invocations'
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: $input.json('$')
        IntegrationResponses:
          - StatusCode: '200'
            ResponseTemplates:
              application/json;charset=UTF-8: $input.json('$')
      MethodResponses:
        - StatusCode: '200'
          ResponseModels:
            application/json;charset=UTF-8: Empty
    DependsOn: LambdaPermission3


  # HistoryInfoOfficeGSIリソース
  HistoryInfoOfficeGSIResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref IndexSerchResource
      PathPart: historyinfooffice
      RestApiId: !Ref ApiGwRestAPI
  # HistoryInfoOfficeGSIメソッド
  HistoryInfoOfficeGSIMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      HttpMethod: POST
      ResourceId: !Ref HistoryInfoOfficeGSIResource
      RestApiId: !Ref ApiGwRestAPI
      AuthorizerId: !Ref Authorizer
      AuthorizationType: COGNITO_USER_POOLS
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Uri:  !Join 
         - ''
         - - 'arn:aws:apigateway:'
           - !Ref AWS::Region
           - ':lambda:path/2015-03-31/functions/'
           - !Ref HistoryInfoOfficeGSILambdaArn
           - '/invocations'
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: $input.json('$')
        IntegrationResponses:
          - StatusCode: '200'
            ResponseTemplates:
              application/json;charset=UTF-8: $input.json('$')
      MethodResponses:
        - StatusCode: '200'
          ResponseModels:
            application/json;charset=UTF-8: Empty
    DependsOn: LambdaPermission4


  # SlipDetailInfoGSIリソース
  SlipDetailInfoGSIResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref IndexSerchResource
      PathPart: slipdetailinfo
      RestApiId: !Ref ApiGwRestAPI
  # SlipDetailInfoGSIメソッド
  SlipDetailInfoGSIMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      HttpMethod: POST
      ResourceId: !Ref SlipDetailInfoGSIResource
      RestApiId: !Ref ApiGwRestAPI
      AuthorizationType: NONE
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Uri:  !Join 
         - ''
         - - 'arn:aws:apigateway:'
           - !Ref AWS::Region
           - ':lambda:path/2015-03-31/functions/'
           - !Ref SlipDetailInfoGSILambdaArn
           - '/invocations'
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: $input.json('$')
        IntegrationResponses:
          - StatusCode: '200'
            ResponseTemplates:
              application/json;charset=UTF-8: $input.json('$')
      MethodResponses:
        - StatusCode: '200'
          ResponseModels:
            application/json;charset=UTF-8: Empty
    DependsOn: LambdaPermission5



  # SlipMessageInfoGSIリソース
  SlipMessageInfoGSIResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref IndexSerchResource
      PathPart: slipmessageinfo
      RestApiId: !Ref ApiGwRestAPI
  # SlipMessageInfoGSIメソッド
  SlipMessageInfoGSIMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      HttpMethod: POST
      ResourceId: !Ref SlipMessageInfoGSIResource
      RestApiId: !Ref ApiGwRestAPI
      AuthorizerId: !Ref Authorizer
      AuthorizationType: COGNITO_USER_POOLS
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Uri:  !Join 
         - ''
         - - 'arn:aws:apigateway:'
           - !Ref AWS::Region
           - ':lambda:path/2015-03-31/functions/'
           - !Ref SlipMessageInfoGSILambdaArn
           - '/invocations'
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: $input.json('$')
        IntegrationResponses:
          - StatusCode: '200'
            ResponseTemplates:
              application/json;charset=UTF-8: $input.json('$')
      MethodResponses:
        - StatusCode: '200'
          ResponseModels:
            application/json;charset=UTF-8: Empty
    DependsOn: LambdaPermission6


  # SlipQuestionGSIリソース
  SlipQuestionGSIResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref IndexSerchResource
      PathPart: slipquestion
      RestApiId: !Ref ApiGwRestAPI
  # SlipQuestionGSIメソッド
  SlipQuestionGSIMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      HttpMethod: POST
      ResourceId: !Ref SlipQuestionGSIResource
      RestApiId: !Ref ApiGwRestAPI
      AuthorizationType: NONE
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Uri:  !Join 
         - ''
         - - 'arn:aws:apigateway:'
           - !Ref AWS::Region
           - ':lambda:path/2015-03-31/functions/'
           - !Ref SlipQuestionGSILambdaArn
           - '/invocations'
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: $input.json('$')
        IntegrationResponses:
          - StatusCode: '200'
            ResponseTemplates:
              application/json;charset=UTF-8: $input.json('$')
      MethodResponses:
        - StatusCode: '200'
          ResponseModels:
            application/json;charset=UTF-8: Empty
    DependsOn: LambdaPermission7


  # TransactionSlipGSIリソース
  TransactionSlipGSIResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref IndexSerchResource
      PathPart: slipquestion
      RestApiId: !Ref ApiGwRestAPI
  # TransactionSlipGSIメソッド
  TransactionSlipGSIMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      HttpMethod: POST
      ResourceId: !Ref TransactionSlipGSIResource
      RestApiId: !Ref ApiGwRestAPI
      AuthorizerId: !Ref Authorizer
      AuthorizationType: COGNITO_USER_POOLS
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Uri:  !Join 
         - ''
         - - 'arn:aws:apigateway:'
           - !Ref AWS::Region
           - ':lambda:path/2015-03-31/functions/'
           - !Ref TransactionSlipGSILambdaArn
           - '/invocations'
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: $input.json('$')
        IntegrationResponses:
          - StatusCode: '200'
            ResponseTemplates:
              application/json;charset=UTF-8: $input.json('$')
      MethodResponses:
        - StatusCode: '200'
          ResponseModels:
            application/json;charset=UTF-8: Empty
    DependsOn: LambdaPermission12


  # UserFavoriteGSIリソース
  UserFavoriteGSIResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref IndexSerchResource
      PathPart: userfavorite
      RestApiId: !Ref ApiGwRestAPI
  # UserFavoriteGSIメソッド
  UserFavoriteGSIMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      HttpMethod: POST
      ResourceId: !Ref UserFavoriteGSIResource
      RestApiId: !Ref ApiGwRestAPI
      AuthorizerId: !Ref Authorizer
      AuthorizationType: COGNITO_USER_POOLS
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Uri:  !Join 
         - ''
         - - 'arn:aws:apigateway:'
           - !Ref AWS::Region
           - ':lambda:path/2015-03-31/functions/'
           - !Ref UserFavoriteGSILambdaArn
           - '/invocations'
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: $input.json('$')
        IntegrationResponses:
          - StatusCode: '200'
            ResponseTemplates:
              application/json;charset=UTF-8: $input.json('$')
      MethodResponses:
        - StatusCode: '200'
          ResponseModels:
            application/json;charset=UTF-8: Empty
    DependsOn: LambdaPermission8



  # UserMyListGSIリソース
  UserMyListGSIResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref IndexSerchResource
      PathPart: usermylist
      RestApiId: !Ref ApiGwRestAPI
  # UserMyListGSIメソッド
  UserMyListGSIMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      HttpMethod: POST
      ResourceId: !Ref UserMyListGSIResource
      RestApiId: !Ref ApiGwRestAPI
      AuthorizerId: !Ref Authorizer
      AuthorizationType: COGNITO_USER_POOLS
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Uri:  !Join 
         - ''
         - - 'arn:aws:apigateway:'
           - !Ref AWS::Region
           - ':lambda:path/2015-03-31/functions/'
           - !Ref UserMyListGSILambdaArn
           - '/invocations'
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: $input.json('$')
        IntegrationResponses:
          - StatusCode: '200'
            ResponseTemplates:
              application/json;charset=UTF-8: $input.json('$')
      MethodResponses:
        - StatusCode: '200'
          ResponseModels:
            application/json;charset=UTF-8: Empty
    DependsOn: LambdaPermission9


  # UserVehicleInfoGSIリソース
  UserVehicleInfoGSIResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref IndexSerchResource
      PathPart: uservehicleinfo
      RestApiId: !Ref ApiGwRestAPI
  # UserVehicleInfoGSIメソッド
  UserVehicleInfoGSIMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      HttpMethod: POST
      ResourceId: !Ref UserVehicleInfoGSIResource
      RestApiId: !Ref ApiGwRestAPI
      AuthorizerId: !Ref Authorizer
      AuthorizationType: COGNITO_USER_POOLS
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Uri:  !Join 
         - ''
         - - 'arn:aws:apigateway:'
           - !Ref AWS::Region
           - ':lambda:path/2015-03-31/functions/'
           - !Ref UserVehicleInfoGSILambdaArn
           - '/invocations'
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: $input.json('$')
        IntegrationResponses:
          - StatusCode: '200'
            ResponseTemplates:
              application/json;charset=UTF-8: $input.json('$')
      MethodResponses:
        - StatusCode: '200'
          ResponseModels:
            application/json;charset=UTF-8: Empty
    DependsOn: LambdaPermission10


  # LambdaPermission
  LambdaPermission1:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: browsingHistory-gsi
      Action: 'lambda:InvokeFunction'
      Principal: apigateway.amazonaws.com

  LambdaPermission2:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: evaluationInfo-gsi
      Action: 'lambda:InvokeFunction'
      Principal: apigateway.amazonaws.com

  LambdaPermission3:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: historyInfoMecha-gsi
      Action: 'lambda:InvokeFunction'
      Principal: apigateway.amazonaws.com

  LambdaPermission4:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: historyInfoOffice-gsi
      Action: 'lambda:InvokeFunction'
      Principal: apigateway.amazonaws.com

  LambdaPermission5:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: slipDetailInfo-gsi
      Action: 'lambda:InvokeFunction'
      Principal: apigateway.amazonaws.com

  LambdaPermission6:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: slipMessageInfo-gsi 
      Action: 'lambda:InvokeFunction'
      Principal: apigateway.amazonaws.com

  LambdaPermission7:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: slipQuestion-gsi
      Action: 'lambda:InvokeFunction'
      Principal: apigateway.amazonaws.com

  LambdaPermission8:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: userFavorite-gsi
      Action: 'lambda:InvokeFunction'
      Principal: apigateway.amazonaws.com

  LambdaPermission9:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: userMyList-gsi
      Action: 'lambda:InvokeFunction'
      Principal: apigateway.amazonaws.com

  LambdaPermission10:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: userVehicleInfo-gsi
      Action: 'lambda:InvokeFunction'
      Principal: apigateway.amazonaws.com


  LambdaPermission11:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: completionSlip-gsi
      Action: 'lambda:InvokeFunction'
      Principal: apigateway.amazonaws.com

  LambdaPermission12:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: transactionSlip-gsi
      Action: 'lambda:InvokeFunction'
      Principal: apigateway.amazonaws.com